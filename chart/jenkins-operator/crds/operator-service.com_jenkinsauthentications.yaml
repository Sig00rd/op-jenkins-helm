
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: jenkinsauthentications.operator-service.com
spec:
  group: operator-service.com
  names:
    kind: JenkinsAuthentication
    listKind: JenkinsAuthenticationList
    plural: jenkinsauthentications
    singular: jenkinsauthentication
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: JenkinsAuthentication is the Schema for the JenkinsAuthentications
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JenkinsAuthenticationSpec defines the desired state of JenkinsAuthentication.
              It's used only for authentication purposes, to check if user with provided
              credentials exists. For granular access properties, look at JenkinsAuthorization
              CRD
            properties:
              github:
                description: GitHub is configuration for GitHub OAuth provider
                properties:
                  apiUri:
                    type: string
                  clientID:
                    type: string
                  clientSecretKeySelector:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      secret:
                        description: The name of the secret in the pod's namespace
                          to select from.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - key
                    - secret
                    type: object
                  mfaEnabled:
                    type: boolean
                  scopes:
                    items:
                      type: string
                    type: array
                  webUri:
                    type: string
                required:
                - apiUri
                - clientID
                - clientSecretKeySelector
                - scopes
                - webUri
                type: object
              saml:
                description: SAML is configuration for enterprise authentication providers
                  like OneLogin or Okta
                properties:
                  advanced:
                    description: Advanced contains additional mechanisms for SAML
                      login
                    properties:
                      authenticationContext:
                        description: AuthenticationContext requests that the SAML
                          provider uses a specific authentication context
                        type: string
                      forceAuthentication:
                        description: ForceAuthentication once enabled, requests to
                          force re-authentication even if user session is active.
                        type: boolean
                      maximumSessionLifetime:
                        description: MaximumSessionLifetime is number of seconds,
                          which defines how long the session is valid
                        type: integer
                      spEntityID:
                        description: SPEntityID overrides default Entity ID for the
                          Service Provider
                        type: string
                    required:
                    - authenticationContext
                    - forceAuthentication
                    - maximumSessionLifetime
                    - spEntityID
                    type: object
                  dataBindingMethod:
                    description: DataBindingMethod defines redirection method binding
                    type: string
                  displayNameAttribute:
                    description: DisplayNameAttribute is name of the attribute that
                      carries the display name By default it's http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
                    type: string
                  emailAttribute:
                    description: EmailAttribute is email attribute in SAML response
                    type: string
                  encryption:
                    description: Encryption contains additional configuration for
                      setting up encryption or signing
                    properties:
                      authRequestSignature:
                        description: AuthRequestSignature enables signature of the
                          Auth Request. If you enable it, the encryption and signing
                          key will be available in the SP metadata file and URL
                        type: boolean
                      keyAlias:
                        description: KeyAlias is alias used in the -alias argument
                          of keytool command
                        type: string
                      keystorePasswordSecretKeySelector:
                        description: KeystorePasswordSecretKeySelector is selector
                          for keystore password secret provided in -storepass argument
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          secret:
                            description: The name of the secret in the pod's namespace
                              to select from.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                        required:
                        - key
                        - secret
                        type: object
                      keystorePath:
                        description: KeystorePath is path to keystore file
                        type: string
                      privateKeyPasswordSecretKeySelector:
                        description: PrivateKeyPasswordSecretKeySelector is selector
                          for private key password secret provided in -keypass argument
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          secret:
                            description: The name of the secret in the pod's namespace
                              to select from.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                            type: object
                        required:
                        - key
                        - secret
                        type: object
                    required:
                    - keyAlias
                    - keystorePasswordSecretKeySelector
                    - keystorePath
                    - privateKeyPasswordSecretKeySelector
                    type: object
                  groupAttribute:
                    description: GroupAttribute is name of the attribute that carries
                      user groups By default it's http://schemas.xmlsoap.org/claims/Group
                    type: string
                  idpMetadata:
                    description: IdPMetadata is identity provider metadata file content.
                    type: string
                  idpMetadataURL:
                    description: IdPMetadataURL is identity provider metadata file
                      source URL.
                    type: string
                  logoutURL:
                    description: LogoutURL is logout URL where user will be redirected
                      once logout
                    type: string
                  maximumAuthenticationLifetime:
                    description: MaximumAuthenticationLifetime is number of seconds
                      since the user was authenticated in IdP while his authentication
                      is considering as active By default it's 86400
                    type: integer
                  refreshPeriod:
                    description: RefreshPeriod indicates period of minutes that we
                      will wait until refresh the IdP Metadata. Set it to 0 to not
                      update the metadata.
                    type: integer
                  usernameAttribute:
                    description: UsernameAttribute is name of the attribute that carries
                      user name which will be used as the Jenkins ID If blank, the
                      nameID provided by identity provider is used
                    type: string
                  usernameCaseConvention:
                    description: UsernameCaseConvention defines the convention for
                      converting usernames
                    type: string
                required:
                - dataBindingMethod
                - displayNameAttribute
                - emailAttribute
                - encryption
                - groupAttribute
                - logoutURL
                - maximumAuthenticationLifetime
                - usernameAttribute
                - usernameCaseConvention
                type: object
              type:
                description: Type indicates which authentication provider is set
                type: string
              userPassword:
                description: UserPassword is basic authentication provider which configures
                  basic username/password authentication
                properties:
                  passwordSecretKeySelector:
                    description: PasswordSecretKeySelector is selector for user's
                      password secret
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      secret:
                        description: The name of the secret in the pod's namespace
                          to select from.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - key
                    - secret
                    type: object
                  username:
                    description: Username is name of the user
                    type: string
                required:
                - passwordSecretKeySelector
                - username
                type: object
            required:
            - type
            type: object
          status:
            description: JenkinsAuthenticationStatus defines the observed state of
              JenkinsAuthentication
            properties:
              conditions:
                description: Conditions contains JenkinsAuthentication statuses
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: 'Status is the status of the condition. Can be
                        True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                      type: string
                    type:
                      description: 'Type is the type of the condition. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
